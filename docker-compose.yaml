services:
  checker-service:
    build:
      context: ./CheckerServer
      dockerfile: Dockerfile
    container_name: checker-service
    ports:
      - "8080:8080"
    depends_on:
      - checker-db
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://checker-db:5432/logs-checker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  checker-db:
    image: postgres:16.1
    container_name: checker-db
    ports:
      - "2345:5432"
    environment:
      - POSTGRES_DB=logs-checker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  asset-menagger-upload:
    container_name: asset-menagger-upload
    ports:
      - "6060:6060"
    build:
      context: ./AssetMenagger/UploadService
      dockerfile: Dockerfile
    depends_on:
      - asset-menagger-download
    restart: always

  asset-menagger-download:
    build:
      context: ./AssetMenagger/ScripteTG
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      PYTHONUNBUFFERED: 1
    tty: true
    restart: always

#  telegram-bot:
#    build:
#      context: ./TelegramBot
#      dockerfile: Dockerfile
#    container_name: telegram-bot
#    ports:
#      - "9090:9090"
#    depends_on:
#      - user-db
#    restart: unless-stopped
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user-db
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres

  user-db:
    image: postgres:16.1
    container_name: user-db
    ports:
      - "3456:5432"
    environment:
      - POSTGRES_DB=user-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
