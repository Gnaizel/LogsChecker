name: CI/CD Pipeline

on:
  pull_request:
    branches: master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Build Checker Server
        run: |
          cd CheckerServer
          mvn clean package -DskipTests

      - name: Build Telegram Bot
        run: |
          cd TelegramBot
          mvn clean package -DskipTests

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Checker Service
        run: docker build -t checker-service ./CheckerServer

      - name: Build Telegram Bot
        run: docker build -t telegram-bot ./TelegramBot

  test-deploy:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: docker-build

    services:
      postgres-checker:
        image: postgres:16.1
        env:
          POSTGRES_DB: logs-checker
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d logs-checker"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres-user:
        image: postgres:16.1
        env:
          POSTGRES_DB: user-db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d user-db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start services
        run: |
          docker-compose up -d
          sleep 10  # Wait for services initialization

      - name: Verify services
        run: |
          docker ps -a
          docker-compose ps

      - name: Run tests
        run: |
          # Add your integration tests here
          echo "Running tests..."